{"version":3,"sources":["components/NavBar.js","services/axios.js","services/TaskService.js","components/TaskForm.js","components/TaskList.js","components/TaskDetail.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","variant","className","Brand","to","Nav","Item","instance","axios","create","baseURL","headers","createTask","task","a","post","tsk","console","log","getTasks","get","getTask","id","updateTask","put","deleteTask","delete","TaskForm","useState","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","res","Form","onSubmit","FormGroup","FormControl","type","placeholder","value","onChange","target","as","Button","TaskList","tasks","setTasks","loadTasks","ts","data","useEffect","map","t","i","_id","TaskDetail","params","useParams","history","useHistory","handleUpdate","push","handleDelete","loadTask","onClick","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5435f7ba.chunk.js","sourcesContent":["import { Nav, Navbar } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n    \n    return(\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"p-3\" >\n                    <Navbar.Brand to=\"/\">Tasks React</Navbar.Brand>\n                <Nav>\n                    <Nav.Item>\n                    <Link className=\"nav-link\" to=\"/\">Tasks List</Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                    <Link className=\"nav-link\" to=\"/tasks/new\">Create Task</Link>\n                    </Nav.Item>\n                </Nav>\n            </Navbar>\n    )\n}\n\nexport default NavBar","import axios from 'axios'// Aun no se como funciona xd\n// Axios permite las peticiones a las rutas creadas\nconst instance = axios.create({\n    baseURL: 'http://localhost:8040/api',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})\n\nexport default instance\n","import instance from './axios'\n\nexport const createTask = async (task) => {\n    const tsk = await instance.post('/tasks', task)\n\n    \n    console.log('error create')\n    \n    return tsk\n}\n\nexport const getTasks = async () => {\n    return await instance.get('/tasks')\n}\n\nexport const getTask = async (id) => {\n    return instance.get('/tasks/'+id)\n}\n\nexport const updateTask = async (id, task) => {\n    return instance.put('/tasks/'+id, task)\n}\n\nexport const deleteTask = async (id) => {\n    return instance.delete('/tasks/'+id)\n}","import { useState } from \"react\";\nimport { Button, Form, FormControl, FormGroup } from \"react-bootstrap\";\nimport { createTask } from \"../services/TaskService\";\n\nfunction TaskForm() {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        if (title === \"\" || description === \"\")\n            return\n\n        const task = {\n            title,\n            description,\n        }\n\n        console.log(task)\n\n        const res = await createTask(task)\n\n        console.log(res)\n\n        setTitle('')\n        setDescription('')\n    }\n\n    return (\n        <div className='col-md-4 offset-md-4'>\n            <Form onSubmit={handleSubmit} className=\"card card-body\">\n                <h1 className='text-center'>Create Task</h1>\n                <FormGroup className=\"mb-3\">\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}></FormControl>\n                </FormGroup>\n                <FormGroup className=\"mb-3\">\n                    <FormControl\n                        as=\"textarea\"\n                        value={description}\n                        placeholder=\"Description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </FormControl>\n                </FormGroup>\n                <Button\n                    type=\"submit\" className=\"btn-success\">Save</Button>\n            </Form> \n        </div> \n    )\n}\n\nexport default TaskForm","import { useEffect, useState } from \"react\"\nimport { getTasks } from \"../services/TaskService\";\nimport {Link} from \"react-router-dom\";\n\nfunction TaskList(){\n\n    const [tasks, setTasks] = useState([])\n\n    const loadTasks = async () => {\n        const ts = await getTasks()\n        setTasks(ts.data)\n        console.log(ts)\n    }\n    useEffect(() => {\n        loadTasks()\n    },[])\n\n    return(\n        <div>\n            <ul className=\"list-group\">\n                {tasks.map((t, i) => (\n                    <li key={t._id} \n                    className=\"list-group-item list-gruop-item-action\"\n                    >\n                    {i+1}: <Link to={'/tasks/'+t._id}>\n                         { t.title}\n                    </Link>\n                    </li>\n                ))}\n            </ul> \n        </div>\n    )\n}\n\nexport default TaskList","import { useEffect, useState } from \"react\";\nimport { Button, Form, FormControl, FormGroup } from \"react-bootstrap\";\nimport { useParams , useHistory } from 'react-router-dom'\nimport { deleteTask, getTask, updateTask } from \"../services/TaskService\";\n\nfunction TaskDetail(){\n\n    const params = useParams()\n    const history = useHistory()\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n\n        if(title ==='' || description ==='')\n            return\n\n        const task = {\n            title,\n            description\n        }\n        const res = await updateTask(params.id, task)\n        console.log(res.data)\n        history.push('/tasks')\n    }\n\n    const handleDelete = async () => {\n        const id = params.id\n        const res = await deleteTask(id)\n\n        console.log(res.data)\n        history.push('/tasks')\n    }\n\n    const loadTask = async ()=> {\n        const id = (params.id)\n        const res = await getTask(id)\n\n        /* console.log(res.data) */\n        setTitle(res.data.title)\n        setDescription(res.data.description)\n    }\n\n    useEffect(() => \n    {\n        loadTask()\n    }, [])\n\n    return(\n    <div className=\"col-md-4 offset-md-4\">\n         <Form className=\"card card-body\" onSubmit={handleUpdate} >\n                <h1 className='text-center'>Update Task</h1>\n                <FormGroup className=\"mb-3\">\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Update Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        ></FormControl>\n                </FormGroup>\n                <FormGroup className=\"mb-3\">\n                    <FormControl\n                        as=\"textarea\"\n                        value={description}\n                        placeholder=\"Update Description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </FormControl>\n                </FormGroup>\n                <Button\n                    type=\"submit\" className=\"btn-success mb-3\">Update\n                </Button>\n                <Button onClick={handleDelete}\n                    className=\"btn btn-danger\"\n                    >\n                    Delete\n                </Button>\n            </Form> \n    </div>)\n}\n\nexport default TaskDetail;","import './App.css';\nimport NavBar from './components/NavBar.js'\nimport {  Route, Switch } from 'react-router-dom'\nimport TaskForm from './components/TaskForm'\nimport TaskList from './components/TaskList'\nimport TaskDetail from \"./components/TaskDetail\";\n\nfunction App() {\n  return (\n    <div >\n      <NavBar/>\n      <div className=\"container p-5\"> \n      <Switch>\n        <Route path=\"/tasks/new\" component={TaskForm} ></Route>\n        <Route path=\"/tasks/:id\" component={TaskDetail} ></Route>\n        <Route path=\"/\" component={TaskList} exact></Route>\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\nimport { BrowserRouter  } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}